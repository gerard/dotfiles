# vim: set filetype=sh :

JUMP_CONF=$HOME/.jumps
# This calculates the hash of the identifier and stores the jump
function __load_jump {
    HASH_HEX=`md5sum - <<< $1 | dd bs=8 count=1 2> /dev/null | tr [:lower:] [:upper:]`
    HASH_DEC=`bc <<< "ibase=16;$HASH_HEX"`
    JUMP_HASH_TABLE[$HASH_DEC]=$2
}

# Clear before re-reading
unset JUMP_HASH_TABLE
if [ -f $JUMP_CONF ]
then
    while read LINE
    do
        TAG=`awk '{ print $1 }' <<< $LINE`
        JUMP=`awk '{ print $2 }' <<< $LINE`
        __load_jump $TAG $JUMP
    done < $JUMP_CONF
fi
unset __load_jump


# Public functionality
function jump {
    HASH_HEX=`md5sum - <<< $1 | dd bs=8 count=1 2> /dev/null | tr [:lower:] [:upper:]`
    HASH_DEC=`bc <<< "ibase=16;$HASH_HEX"`
    JUMPTO=${JUMP_HASH_TABLE[$HASH_DEC]}

    [ -z "$JUMPTO" ] && echo "No such jump" && return 1
    cd $JUMPTO
}

function add_jump {
    HASH_HEX=`md5sum - <<< $1 | dd bs=8 count=1 2> /dev/null | tr [:lower:] [:upper:]`
    HASH_DEC=`bc <<< "ibase=16;$HASH_HEX"`
    JUMPTO=${JUMP_HASH_TABLE[$HASH_DEC]}

    [ ! -z "$JUMPTO" ] && echo "That jump already exists: $JUMPTO" && return 1
    echo "$1 $PWD" >> $JUMP_CONF

    # This is unoptimal, but reasonable: makes the changes visible
    reload
}
set +x
